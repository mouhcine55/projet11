swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
          
          
  /user/{userId}/accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: User Accounts API
      description: API for fetching a user Accounts
      parameters:
        - in: header
          name: Authorization
          description: "Attach Bearer JWT token"
          required: true
          type: string
        - in: path
          name: userId
          description: User ID
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK, Accounts successfully retrieved
          schema:
            $ref: '#/definitions/UserAccounts'
        '401':
          description: Unauthorized, You must be logged in to access this resource
        '404':
          description: No accounts found for this user
        '500':
          description: Internal Server Error, an error occurred, please try again later
  /accounts/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: User Accounts transactions API
      description: User bank account transaction list retrieval API
      parameters:
        - in: header
          name: Authorization
          description: "Attach Bearer JWT token"
          required: true
          type: string
        - in: path
          name: accountId
          description: User Account ID
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK, Transactions successfully retrieved
          schema:
            $ref: '#/definitions/UserAccountTransactions'
        '401':
          description: Unauthorized, You must be logged in to access this resource
        '404':
          description: No account found with this ID
        '500':
          description: Internal Server Error, An error occurred, please try again later
  /transactions/{transactionId}/category:
    patch:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update Category of a Transaction
      description: Update the category of a user's bank account transaction using transactionId
      parameters:
        - in: header
          name: Authorization
          description: "Attach Bearer JWT token"
          required: true
          type: string
        - in: path
          name: transactionId
          description: Account Transaction ID
          required: true
          type: string
        - in: body
          name: body
          description: Category Payload
          required: true
          schema: 
            $ref: '#/definitions/Category'
      produces:
        - application/json
      responses: 
        '200':
          description: OK, Transaction category successfully updated
        '400':
          description: Bad request   
        '401':
          description: Unauthorized, You must be logged in to access this resource
        '404':
          description: No transaction found with this ID
        '500':
          description: Internal Server Error, An error occurred, please try again later
  /transactions/{transactionId}/note:
    patch:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Create/Update Note for a Transaction
      description: Create/Update the note of a user's bank account transaction using transactionId
      parameters:
        - in: header
          name: Authorization
          description: "Attach Bearer JWT token"
          required: true
          type: string
        - in: path
          name: transactionId
          description: Account Transaction ID
          required: true
          type: string
        - in: body
          name: body
          description: Note Payload
          required: true
          schema: 
            $ref: '#/definitions/Note'
      produces:
        - application/json
      responses: 
        '200':
          description: OK, Transaction note successfully updated
        '400':
          description: Bad request   
        '401':
          description: Unauthorized, You must be logged in to access this resource
        '404':
          description: No transaction found with this ID
        '500':
          description: Internal Server Error, An error occurred, please try again later
    delete:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Delete transaction note
      description: Delete the note of a user's bank account transaction using transactionId
      parameters: 
      - in: header
        name: Authorization
        description: "Attach Bearer JWT token"
        required: true
        type: string
      - in: path
        name: transactionId
        description: Account Transaction ID
        required: true
        type: string
      produces: 
       - application/json
      responses:
        '200':
          description: OK, Note deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: No Note found with this transaction
        '500':
          description: Internal Server Error, An error occurred, please try again later
          
    
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  UserAccounts:
    type: array
    items:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        amount:
          type: string
        description:
          type: string
    minItems: 3
  UserAccountTransactions:
    type: array
    items: 
      type: object
      properties:
        id:
          type: string
        date:
          type: string
        description:
          type: string
        amount:
          type: string
        balance:
          type: string
        transaction_type:
          type: string
        category:
          type: string
        note:
          type: string
    minItems: 3
  Category:
    properties:
      category:
        type: string
        description: Edit transaction category
  Note:
    properties:
      note:
        type: string
        description: transaction note
      
      
      
